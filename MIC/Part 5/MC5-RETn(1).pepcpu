// EXAMPLE for MC5-Implement the 'RETn' instruction steps 
// RETn unary operation with op code format 0x58 to 0x5F, the three low order bits(nnn)
// representing the number of bytes(0-7)to be deallocated from the stack
//the next line allows us to initialize regs and memory
UnitPre: IR=0x5E4444, SP=0x001E, PC=0x4445, Mem[0x0024]=0x2222
UnitPost:IR=0x5E4444, SP=0x0026, PC=0x2222, Mem[0x0024]=0x2222
// RTL for the RETn
//
1. A=5, B=23, AMux=1, ALU=1, CMux=1, ANDZ=0, C=5; CCk, LoadCk
2. A=5, B=23, AMux=1, ALU=1, CMux=1, ANDZ=0, C=5; CCk, LoadCk
3. A=5, B=23, AMux=1, ALU=1, CMux=1, ANDZ=0, C=5; CCk, LoadCk
4. A=5, B=23, AMux=1, ALU=1, CMux=1, ANDZ=0, C=5; CCk, LoadCk
5. A=5, B=23, AMux=1, ALU=1, CMux=1, ANDZ=0, C=5; CCk, LoadCk
6. A=5, B=23, AMux=1, ALU=1, CMux=1, ANDZ=0, C=5; CCk, LoadCk
7. A=4,B=5;MARCk
8. MemRead
9. MemRead, MDRMux=0; MDRCk
10. AMux=0, ALU=0, CMux=1, C=6; LoadCk
11. AMux=0, ALU=0, CMux=1, C=7; LoadCk
12. A=5, B=23, AMux=1, ALU=1, CMux=1, ANDZ=0, C=5; CCk, LoadCk
13. A=5, B=23, AMux=1, ALU=1, CMux=1, ANDZ=0, C=5; CCk, LoadCk
// RETurned to calling routine
